################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

apiVersion: flink.apache.org/v1alpha1
kind: FlinkDeployment
metadata:
  namespace: default
  name: basic-sql-kafka-example
spec:
  image: flink:1.14.4-scala_2.12-java11
  flinkVersion: v1_14
  flinkConfiguration:
    taskmanager.numberOfTaskSlots: "2"
  serviceAccount: flink
  jobManager:
    replicas: 1
    resource:
      memory: "2048m"
      cpu: 1
  taskManager:
    resource:
      memory: "2048m"
      cpu: 1
  podTemplate:
    apiVersion: v1
    kind: Pod
    metadata:
      name: pod-template
    spec:
      serviceAccount: flink
      containers:
      # Do not change the main container name
        - name: flink-main-container
          volumeMounts:
            - mountPath: /opt/flink/artifact
              name: flink-artifact
            - mountPath: /opt/flink/usrlib
              name: flink-usrlib
      volumes:
        - name: flink-artifact
          emptyDir: { }
        - name: flink-usrlib
          emptyDir: { }
      initContainers:
        # Sample sidecar container
        - name: artifacts-fetcher
          image: busybox:latest
          command: [ "/bin/sh","-c", "wget https://vvr-test.oss-cn-hangzhou.aliyuncs.com/flink-kubernetes-sql-runner-1.0-SNAPSHOT.jar -O /flink-artifact/flink-kubernetes-sql-runner-1.0-SNAPSHOT.jar && wget https://vvr-test.oss-cn-hangzhou.aliyuncs.com/sql_input.txt -O /flink-artifact/sql_input.txt"]
          volumeMounts:
            - mountPath: /flink-artifact
              name: flink-artifact
        - name: usrlib-fetcher
          image: busybox:latest
          command: [ "/bin/sh","-c", "wget https://repo1.maven.org/maven2/org/apache/flink/flink-sql-connector-kafka_2.12/1.14.4/flink-sql-connector-kafka_2.12-1.14.4.jar -O /flink-usrlib/flink-sql-connector-kafka_2.12-1.14.4.jar" ]
          volumeMounts:
            - mountPath: /flink-usrlib
              name: flink-usrlib
  job:
    jarURI: local:///opt/flink/artifact/flink-kubernetes-sql-runner-1.0-SNAPSHOT.jar
    parallelism: 2
    args:
      - "CREATE TABLE kafkaSource (id STRING,price INTEGER,sell_time TIMESTAMP ) WITH ('connector' = 'kafka','format' = 'csv','topic' = 'transaction','scan.startup.mode' = 'earliest-offset','properties.group.id' = 'testGroup2','properties.bootstrap.servers' = '47.110.147.152:9093');
      select * from kafkaSource;"
    entryClass: org.apache.flink.kubernetes.operator.sql.runner.FlinkOperatorSqlRunner
    upgradeMode: stateless
#  SELECT word, SUM(frequency) AS `count` FROM (VALUES ('Hello', 1), ('Hello2', 1), ('Ciao', 1), ('Hello', 2)) AS WordTable(word, frequency) GROUP BY word;